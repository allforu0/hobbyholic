apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

springVersion = '3.2.0.RELEASE'
compileJava.options.encoding = 'UTF-8'

configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
}

repositories {
    maven { url 'http://repo.springsource.org/libs-release' }
    maven { url 'http://repo.springsource.org/libs-milestone' }
    maven { url 'http://repo.springsource.org/plugins-release' }
    mavenCentral()
}

dependencies {
    compile "org.springframework:spring-webmvc:$springVersion",
            'ch.qos.logback:logback-classic:1.0.9',
            'org.slf4j:jcl-over-slf4j:1.7.2'

    provided 'org.apache.tomcat:tomcat-servlet-api:7.0.34',
            'org.apache.tomcat:tomcat-jsp-api:7.0.34'

    testCompile 'junit:junit:4.10',
            'org.mockito:mockito-all:1.9.0'
}

tasks.withType(Compile) {
	options.encoding = 'UTF-8'
}

task newPom << {
    pom {}.writeTo("build/pom.xml")
}

buildscript {
    repositories {
        maven { url 'http://repo.springsource.org/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.1'
    }
}

idea {
    project {
        ipr {
            withXml { provider ->
                // Enable Version Control Integration : Git
                def mapping = provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping
                mapping.@vcs = 'Git'
                mapping.@directory = '$PROJECT_DIR$'
            }
        }
    }
    module {
        downloadSources = true
        downloadJavadoc = true

        inheritOutputDirs = false
        outputDir = file('build/classes')
        testOutputDir = file('build/testClasses')

        iml {
            withXml { provider ->
                def facetComp = provider.node.appendNode('component')
                facetComp.@name = 'FacetManager'

                // Add Web Facet
                def webFacetNode = facetComp.appendNode('facet', [type: 'web', name: 'Web'])
                def webConfNode = webFacetNode.appendNode('configuration')

                def webSourceRootsNode = webConfNode.appendNode('sourceRoots')
                webSourceRootsNode.appendNode('root', ['url': 'file://$MODULE_DIR$/src/main/java'])
                webSourceRootsNode.appendNode('root', ['url': 'file://$MODULE_DIR$/src/main/resources'])

                def webWebRootsNode = webConfNode.appendNode('webroots')
                webWebRootsNode.appendNode('root', ['url': 'file://$MODULE_DIR$/src/main/webapp', 'relative': '/'])
            }
        }
    }
}